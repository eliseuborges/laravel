name: Laravel

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-js:
    name: Build Js/Css
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 # Download the source code
      - name: NPM Build
        run: |
          npm install
          npm run prod
      - name: Upload build files
        uses: actions/upload-artifact@v2
        with:
          name: assets
          path: public
  
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Dependency Check
      uses: umutphp/sensiolabs-security-checker-action@v1
    - name: Generate key
      run: php artisan key:generate
#    - name: Directory Permissions
#      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit
  
  build:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-js, tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
#      - name: Directory Permissions
#        run: chmod -R 777 storage bootstrap/cache
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.vars.outputs.sha_short }}
          release_name: Release ${{ steps.vars.outputs.sha_short }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
